{"ast":null,"code":"var _jsxFileName = \"/Users/marcosdev/Documents/Javascript/ECOLETA-WEB-Next-Level-Week-Rocketseat/src/pages/CreatePoint/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\";\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport api from '../../services/api';\nimport Dropzone from '../../components/Dropzone';\nimport axios from 'axios';\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [ufSelected, setUfSelected] = useState('0');\n  const [citySelected, setCitySelected] = useState('0');\n  const [itemsSelecteds, setItemsSelecteds] = useState([]);\n  const [inicialPosition, setInitialPosition] = useState([0, 0]);\n  const [PositionMap, setPositionMap] = useState([0, 0]);\n  const [selectedFile, setSelectedFile] = useState();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  const history = useHistory();\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n      setUfs(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    if (ufSelected === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${ufSelected}/municipios`).then(response => {\n      setCities(response.data);\n    });\n  }, [ufSelected]);\n\n  function handleInput(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleSelectItem(id) {\n    const alreadySelected = itemsSelecteds.findIndex(item => item === id);\n\n    if (alreadySelected >= 0) {\n      setItemsSelecteds(state => state.filter(item => item !== id));\n      return;\n    }\n\n    setItemsSelecteds([...itemsSelecteds, id]);\n  }\n\n  function handleSelectUf(event) {\n    const value = event.target.value;\n    setUfSelected(value);\n  }\n\n  function handleSelectCity(event) {\n    const value = event.target.value;\n    setCitySelected(value);\n  }\n\n  function handleMapClick(event) {\n    const {\n      lat,\n      lng\n    } = event.latlng;\n    setPositionMap([lat, lng]);\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      whatsapp\n    } = formData;\n    const items = itemsSelecteds;\n    const city = citySelected;\n    const uf = ufSelected;\n    const [latitude, longitude] = PositionMap;\n    const data = new FormData();\n    data.append('name', name);\n    data.append('email', email);\n    data.append('whatsapp', whatsapp);\n    data.append('city', city);\n    data.append('uf', uf);\n    data.append('latitude', String(latitude));\n    data.append('longitude', String(longitude));\n    data.append('items', items.join(','));\n\n    if (selectedFile) {\n      data.append('image', selectedFile);\n    }\n\n    await api.post('/points', data);\n    alert('ponto cadastrado com sucesso!');\n    history.push('/');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }), \"Voltar para home\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Cadastro do \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 27\n    }\n  }), \" ponto de coleta\"), /*#__PURE__*/React.createElement(Dropzone, {\n    onFileUpload: setSelectedFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, \"dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, \"Nome da entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, \"email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, \"whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: inicialPosition,\n    zoom: 14,\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"https://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: PositionMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, \"Estado (UF)\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    value: ufSelected,\n    id: \"uf\",\n    onChange: handleSelectUf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, \" selecione uma Estado (UF)\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: uf.id,\n    value: uf.sigla,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, uf.nome, \" - (\", uf.sigla, \")\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    value: citySelected,\n    id: \"city\",\n    onChange: handleSelectCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, \"Selecione uma cidade\"), cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city.id,\n    value: city.nome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, city.nome)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, \"\\xCDtens de coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, \"selecione um ou mais itens abaixo\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    onClick: () => handleSelectItem(item.id),\n    className: itemsSelecteds.includes(item.id) ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: \"oleo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 23\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["/Users/marcosdev/Documents/Javascript/ECOLETA-WEB-Next-Level-Week-Rocketseat/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","useHistory","FiArrowLeft","Map","TileLayer","Marker","api","Dropzone","axios","CreatePoint","items","setItems","ufs","setUfs","cities","setCities","ufSelected","setUfSelected","citySelected","setCitySelected","itemsSelecteds","setItemsSelecteds","inicialPosition","setInitialPosition","PositionMap","setPositionMap","selectedFile","setSelectedFile","formData","setFormData","name","email","whatsapp","history","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","get","then","response","data","handleInput","event","value","target","handleSelectItem","id","alreadySelected","findIndex","item","state","filter","handleSelectUf","handleSelectCity","handleMapClick","lat","lng","latlng","handleSubmit","preventDefault","city","uf","FormData","append","String","join","post","alert","push","logo","map","sigla","nome","includes","image_url","title"],"mappings":"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","sourcesContent":["import React , { useEffect, useState, ChangeEvent, FormEvent } from 'react';\nimport './styles.css';\nimport logo from '../../assets/logo.svg';\nimport { Link, useHistory} from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map , TileLayer , Marker } from 'react-leaflet';\nimport { LeafletMouseEvent } from 'leaflet'\nimport api from '../../services/api';\nimport Dropzone from '../../components/Dropzone';\nimport axios from 'axios';\n\ninterface ItemsData {\n  id:number;\n  title:string;\n  image_url:string;\n}\n\ninterface UfsData {\n  id:number;\n  sigla:string;\n  nome:string;\n}\n\ninterface CitiesData {\n  id:number;\n  nome:string;\n}\n\n\nconst CreatePoint: React.FC = () =>{\n\n  const [items, setItems] = useState<ItemsData[]>([]);\n  const [ufs , setUfs] = useState<UfsData[]>([]);\n  const [cities , setCities] = useState<CitiesData[]>([]);\n  const [ufSelected, setUfSelected] = useState('0');\n  const [citySelected, setCitySelected] = useState('0');\n  const [itemsSelecteds, setItemsSelecteds] = useState<number[]>([]);\n  const [inicialPosition,setInitialPosition] = useState<[number,number]>([0,0]);\n  const [PositionMap,setPositionMap] = useState<[number,number]>([0,0]);\n  const [selectedFile, setSelectedFile] = useState<File>()\n  const [formData,setFormData] = useState({\n    name:'',\n    email:'',\n    whatsapp:''\n  });\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    navigator.geolocation.getCurrentPosition(position => {\n      const {latitude, longitude} = position.coords;\n\n      setInitialPosition([latitude,longitude])\n    })\n  },[])\n\n  useEffect(()=>{\n    api.get('items').then( response => {\n      setItems(response.data);\n    })\n  },[])\n\n  useEffect(()=>{\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then( response => {\n      setUfs(response.data)\n    })\n  },[])\n\n  useEffect(()=>{\n    if(ufSelected === '0'){\n      return\n    }\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${ufSelected}/municipios`).then( response => {\n      setCities(response.data)\n    })\n  },[ufSelected])\n\n  function handleInput(event:ChangeEvent<HTMLInputElement>){\n    const { name , value } = event.target; \n\n    setFormData({\n      ...formData,\n      [name]:value,\n    })\n  }\n\n  function handleSelectItem(id:number){\n\n    const alreadySelected = itemsSelecteds.findIndex(item => item === id);\n    if(alreadySelected >= 0){\n      setItemsSelecteds((state) => state.filter(item => item !== id));\n      return\n    }\n    setItemsSelecteds([...itemsSelecteds, id])\n\n  }\n\n  function handleSelectUf(event:ChangeEvent<HTMLSelectElement>){\n    const value = event.target.value;\n\n    setUfSelected(value);\n  }\n\n  function handleSelectCity(event:ChangeEvent<HTMLSelectElement>){\n    const value = event.target.value;\n\n    setCitySelected(value);\n  }\n\n  function handleMapClick(event: LeafletMouseEvent){\n    const { lat , lng } = event.latlng;\n\n    setPositionMap([lat, lng])\n  }\n\n  async function handleSubmit(event:FormEvent){\n    event.preventDefault();\n\n    const { name, email , whatsapp } = formData;\n    const items = itemsSelecteds;\n    const city = citySelected;\n    const uf = ufSelected;\n    const [ latitude, longitude] = PositionMap;\n\n    const data = new FormData();\n\n    data.append('name',name);\n    data.append('email',email);\n    data.append('whatsapp',whatsapp);\n    data.append('city',city);\n    data.append('uf',uf);\n    data.append('latitude',String(latitude));\n    data.append('longitude',String(longitude));\n    data.append('items', items.join(','));\n\n    if(selectedFile){\n      data.append('image', selectedFile);\n    }\n \n    await api.post('/points', data);\n    alert('ponto cadastrado com sucesso!')\n    history.push('/');\n  }\n  return (\n    <div id=\"page-create-point\">\n        <header>\n          <img src={logo} alt=\"ecoleta\" />\n\n          <Link to=\"/\">\n            <FiArrowLeft />\n            Voltar para home\n          </Link>\n        </header>\n        <form onSubmit={handleSubmit}>\n          <h1>Cadastro do <br/> ponto de coleta</h1> \n\n          <Dropzone onFileUpload={setSelectedFile}/>\n\n          <fieldset>\n            <legend>\n              <h2>dados</h2>\n            </legend>\n            <div className=\"field\">\n              <label htmlFor=\"name\">Nome da entidade</label>\n              <input type=\"text\" name=\"name\" id=\"name\" onChange={handleInput}/>\n            </div>\n            <div className=\"field-group\">\n              <div className=\"field\">\n                <label htmlFor=\"email\">email</label>\n                <input type=\"email\" name=\"email\" id=\"email\" onChange={handleInput}/>\n              </div>\n              <div className=\"field\">\n                <label htmlFor=\"whatsapp\">whatsapp</label>\n                <input type=\"text\" name=\"whatsapp\" id=\"whatsapp\" onChange={handleInput} />\n              </div>\n            </div>\n          </fieldset>\n\n          <fieldset>\n            <legend>\n              <h2>Endereço</h2>\n              <span>selecione o endereço no mapa</span>\n            </legend>\n            <Map center={inicialPosition} zoom={14} onClick={handleMapClick}>\n              <TileLayer \n                attribution='&amp;copy <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              />\n              <Marker position={PositionMap}/>\n            </Map>\n            <div className=\"field-group\">\n              <div className=\"field\">\n                <label htmlFor=\"uf\">Estado (UF)</label>\n                <select name=\"uf\" value={ufSelected} id=\"uf\" onChange={handleSelectUf} >\n                <option value=\"0\"> selecione uma Estado (UF)</option>\n                  {ufs.map(uf =>\n                    <option \n                      key={uf.id} \n                      value={uf.sigla}>{uf.nome} - ({uf.sigla})\n                    </option>)}\n                </select>\n              </div>\n              <div className=\"field\">\n                <label htmlFor=\"city\">Cidade</label>\n                <select name=\"city\" value={citySelected} id=\"city\" onChange={handleSelectCity} >\n                  <option value=\"0\">Selecione uma cidade</option>\n                  {cities.map(city =>\n                    <option \n                      key={city.id} \n                      value={city.nome}>{city.nome}\n                    </option>)}\n                </select>\n              </div>\n            </div>\n          </fieldset>\n\n          <fieldset>\n            <legend>\n              <h2>Ítens de coleta</h2>\n              <span>selecione um ou mais itens abaixo</span>\n            </legend>\n            <ul className=\"items-grid\">\n              {\n                items.map(item => (\n                  <li \n                    key={item.id} \n                    onClick={()=> handleSelectItem(item.id)} \n                    className={itemsSelecteds.includes(item.id)?'selected':''}>\n                      <img src={item.image_url} alt=\"oleo\" />\n                      <span>{item.title}</span>\n                  </li>\n                ))\n              }\n              \n            </ul>\n          </fieldset>\n          <button type=\"submit\">Cadastrar ponto de coleta</button>\n        </form>\n    </div>  \n  )\n}\n\nexport default CreatePoint;"]},"metadata":{},"sourceType":"module"}