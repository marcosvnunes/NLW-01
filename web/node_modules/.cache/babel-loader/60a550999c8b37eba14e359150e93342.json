{"ast":null,"code":"var _jsxFileName = \"/Users/marcosdev/Documents/Javascript/next-level-week-1-rocketseat-/web/src/pages/CreatePoint/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\";\nimport { Link } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport api from '../../services/api';\nimport axios from 'axios';\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  const [ufSelected, setUfSelected] = useState('0');\n  const [citySelected, setCitySelected] = useState('0');\n  const [inicialPosition, setInitialPosition] = useState([0, 0]);\n  const [PositionMap, setPositionMap] = useState([0, 0]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n      setUfs(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    if (ufSelected === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${ufSelected}/municipios`).then(response => {\n      setCities(response.data);\n    });\n  }, [ufSelected]);\n\n  function handleInput(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleSelectUf(event) {\n    const value = event.target.value;\n    setUfSelected(value);\n  }\n\n  function handleSelectCity(event) {\n    const value = event.target.value;\n    setCitySelected(value);\n  }\n\n  function handleMapClick(event) {\n    const {\n      lat,\n      lng\n    } = event.latlng;\n    setPositionMap([lat, lng]);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), \"Voltar para home\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Cadastro do \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 27\n    }\n  }), \" ponto de coleta\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, \"Nome da entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, \"selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: inicialPosition,\n    zoom: 14,\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"https://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: PositionMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"Estado (UF)\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    value: ufSelected,\n    id: \"uf\",\n    onChange: handleSelectUf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, \" selecione uma Estado (UF)\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: uf.id,\n    value: uf.sigla,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, uf.nome, \" - (\", uf.sigla, \")\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    value: citySelected,\n    id: \"city\",\n    onChange: handleSelectCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }, \"Selecione uma cidade\"), cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city.id,\n    value: city.nome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, city.nome)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \"\\xCDtens de coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, \"selecione um ou mais itens abaixo\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: \"oleo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["/Users/marcosdev/Documents/Javascript/next-level-week-1-rocketseat-/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","FiArrowLeft","Map","TileLayer","Marker","api","axios","CreatePoint","items","setItems","ufs","setUfs","cities","setCities","formData","setFormData","name","email","whatsapp","ufSelected","setUfSelected","citySelected","setCitySelected","inicialPosition","setInitialPosition","PositionMap","setPositionMap","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","get","then","response","data","handleInput","event","value","target","handleSelectUf","handleSelectCity","handleMapClick","lat","lng","latlng","logo","map","uf","id","sigla","nome","city","item","image_url","title"],"mappings":"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","sourcesContent":["import React , { useEffect, useState, ChangeEvent } from 'react';\nimport './styles.css';\nimport logo from '../../assets/logo.svg';\nimport { Link } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map , TileLayer , Marker } from 'react-leaflet';\nimport { LeafletMouseEvent } from 'leaflet'\nimport api from '../../services/api';\nimport axios from 'axios';\n\ninterface ItemsData {\n  id:number;\n  title:string;\n  image_url:string;\n}\n\ninterface UfsData {\n  id:number;\n  sigla:string;\n  nome:string;\n}\n\ninterface CitiesData {\n  id:number;\n  nome:string;\n}\n\n\nconst CreatePoint: React.FC = () =>{\n  const [items, setItems] = useState<ItemsData[]>([]);\n  const [ufs , setUfs] = useState<UfsData[]>([])\n  const [cities , setCities] = useState<CitiesData[]>([])\n\n  const [formData,setFormData] = useState({\n    name:'',\n    email:'',\n    whatsapp:''\n  })\n\n  const [ufSelected, setUfSelected] = useState('0')\n  const [citySelected, setCitySelected] = useState('0')\n\n  const [inicialPosition,setInitialPosition] = useState<[number,number]>([0,0])\n  const [PositionMap,setPositionMap] = useState<[number,number]>([0,0])\n\n  useEffect(()=>{\n    navigator.geolocation.getCurrentPosition(position => {\n      const {latitude, longitude} = position.coords;\n\n      setInitialPosition([latitude,longitude])\n    })\n  },[])\n\n\n\n  useEffect(()=>{\n    api.get('items').then( response => {\n      setItems(response.data);\n    })\n  },[])\n\n  useEffect(()=>{\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then( response => {\n      setUfs(response.data)\n    })\n  },[])\n\n  useEffect(()=>{\n    if(ufSelected === '0'){\n      return\n    }\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${ufSelected}/municipios`).then( response => {\n      setCities(response.data)\n    })\n  },[ufSelected])\n\n  function handleInput(event:ChangeEvent<HTMLInputElement>){\n    const { name , value } = event.target; \n\n    setFormData({\n      ...formData,\n      [name]:value,\n    })\n  }\n\n  function handleSelectUf(event:ChangeEvent<HTMLSelectElement>){\n    const value = event.target.value;\n\n    setUfSelected(value);\n  }\n\n  function handleSelectCity(event:ChangeEvent<HTMLSelectElement>){\n    const value = event.target.value;\n\n    setCitySelected(value);\n  }\n\n  function handleMapClick(event: LeafletMouseEvent){\n    const { lat , lng } = event.latlng;\n\n    setPositionMap([lat, lng])\n  }\n  return (\n    <div id=\"page-create-point\">\n        <header>\n          <img src={logo} alt=\"ecoleta\" />\n\n          <Link to=\"/\">\n            <FiArrowLeft />\n            Voltar para home\n          </Link>\n        </header>\n        <form>\n          <h1>Cadastro do <br/> ponto de coleta</h1>\n\n          <fieldset>\n            <legend>\n              <h2>dados</h2>\n            </legend>\n            <div className=\"field\">\n              <label htmlFor=\"name\">Nome da entidade</label>\n              <input type=\"text\" name=\"name\" id=\"name\" onChange={handleInput}/>\n            </div>\n            <div className=\"field-group\">\n              <div className=\"field\">\n                <label htmlFor=\"email\">email</label>\n                <input type=\"email\" name=\"email\" id=\"email\" onChange={handleInput}/>\n              </div>\n              <div className=\"field\">\n                <label htmlFor=\"whatsapp\">whatsapp</label>\n                <input type=\"text\" name=\"whatsapp\" id=\"whatsapp\" onChange={handleInput} />\n              </div>\n            </div>\n          </fieldset>\n\n          <fieldset>\n            <legend>\n              <h2>Endereço</h2>\n              <span>selecione o endereço no mapa</span>\n            </legend>\n            <Map center={inicialPosition} zoom={14} onClick={handleMapClick}>\n              <TileLayer \n                attribution='&amp;copy <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              />\n              <Marker position={PositionMap}/>\n            </Map>\n            <div className=\"field-group\">\n              <div className=\"field\">\n                <label htmlFor=\"uf\">Estado (UF)</label>\n                <select name=\"uf\" value={ufSelected} id=\"uf\" onChange={handleSelectUf} >\n                <option value=\"0\"> selecione uma Estado (UF)</option>\n                  {ufs.map(uf =>\n                    <option \n                      key={uf.id} \n                      value={uf.sigla}>{uf.nome} - ({uf.sigla})\n                    </option>)}\n                </select>\n              </div>\n              <div className=\"field\">\n                <label htmlFor=\"city\">Cidade</label>\n                <select name=\"city\" value={citySelected} id=\"city\" onChange={handleSelectCity} >\n                  <option value=\"0\">Selecione uma cidade</option>\n                  {cities.map(city =>\n                    <option \n                      key={city.id} \n                      value={city.nome}>{city.nome}\n                    </option>)}\n                </select>\n              </div>\n            </div>\n          </fieldset>\n\n          <fieldset>\n            <legend>\n              <h2>Ítens de coleta</h2>\n              <span>selecione um ou mais itens abaixo</span>\n            </legend>\n            <ul className=\"items-grid\">\n              {\n                items.map(item => (\n                  <li key={item.id}>\n                    <img src={item.image_url} alt=\"oleo\" />\n                    <span>{item.title}</span>\n                  </li>\n                ))\n              }\n              \n            </ul>\n          </fieldset>\n          <button type=\"submit\">Cadastrar ponto de coleta</button>\n        </form>\n    </div>  \n  )\n}\n\nexport default CreatePoint;"]},"metadata":{},"sourceType":"module"}