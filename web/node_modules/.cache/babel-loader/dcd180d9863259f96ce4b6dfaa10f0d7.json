{"ast":null,"code":"var _jsxFileName = \"/Users/marcosdev/Documents/Javascript/ECOLETA-WEB-Next-Level-Week-Rocketseat/src/components/Dropzone/index.tsx\";\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport './styles.css';\nimport { FiUpload } from 'react-icons/fi';\n\nconst Dropzone = ({\n  onFileUpload\n}) => {\n  const [selectedFileUrl, setSelectedFileUrl] = useState('');\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    ;\n    const fileUrl = URL.createObjectURL(file);\n    setSelectedFileUrl(fileUrl);\n    onFileUpload(file);\n  }, [onFileUpload]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: 'image/*'\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    className: \"dropzone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    accept: \"image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  })), selectedFileUrl ? /*#__PURE__*/React.createElement(\"img\", {\n    src: selectedFileUrl,\n    alt: \"point thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FiUpload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }), \"Imagem do estabelecimento\"));\n};\n\nexport default Dropzone;","map":{"version":3,"sources":["/Users/marcosdev/Documents/Javascript/ECOLETA-WEB-Next-Level-Week-Rocketseat/src/components/Dropzone/index.tsx"],"names":["React","useCallback","useState","useDropzone","FiUpload","Dropzone","onFileUpload","selectedFileUrl","setSelectedFileUrl","onDrop","acceptedFiles","file","fileUrl","URL","createObjectURL","getRootProps","getInputProps","accept"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAO,cAAP;AACA,SAAQC,QAAR,QAAuB,gBAAvB;;AAMA,MAAMC,QAAyB,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoB;AACnD,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAMO,MAAM,GAAGR,WAAW,CAACS,aAAa,IAAI;AAC1C,UAAMC,IAAI,GAAGD,aAAa,CAAC,CAAD,CAA1B;AAA8B;AAE9B,UAAME,OAAO,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAhB;AAEAH,IAAAA,kBAAkB,CAACI,OAAD,CAAlB;AAEAN,IAAAA,YAAY,CAACK,IAAD,CAAZ;AACD,GARyB,EAQvB,CAACL,YAAD,CARuB,CAA1B;AAUA,QAAM;AAACS,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAgCb,WAAW,CAAC;AAChDM,IAAAA,MADgD;AAEhDQ,IAAAA,MAAM,EAAC;AAFyC,GAAD,CAAjD;AAKA,sBACE,6CAASF,YAAY,EAArB;AAAyB,IAAA,SAAS,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,+CAAWC,aAAa,EAAxB;AAA4B,IAAA,MAAM,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAGIT,eAAe,gBACX;AAAK,IAAA,GAAG,EAAEA,eAAV;AAA2B,IAAA,GAAG,EAAC,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,gBAGX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,8BANR,CADF;AAgBD,CAjCD;;AAmCA,eAAeF,QAAf","sourcesContent":["import React, {useCallback, useState} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport './styles.css';\nimport {FiUpload} from 'react-icons/fi';\n\ninterface Props {\n  onFileUpload: (file:File) => void;\n}\n\nconst Dropzone: React.FC<Props>= ({onFileUpload}) => {\n  const [selectedFileUrl, setSelectedFileUrl] = useState('');\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];;\n\n    const fileUrl = URL.createObjectURL(file);\n\n    setSelectedFileUrl(fileUrl);\n\n    onFileUpload(file);\n  }, [onFileUpload]);\n\n  const {getRootProps, getInputProps} = useDropzone({\n    onDrop,\n    accept:'image/*'\n  })\n\n  return (\n    <div {...getRootProps()} className=\"dropzone\">\n      <input {...getInputProps()} accept=\"image/*\" />\n\n      { selectedFileUrl \n          ? <img src={selectedFileUrl} alt=\"point thumbnail\" />\n          :(\n            <p>\n              <FiUpload />\n              Imagem do estabelecimento \n            </p>\n          )\n      }\n      \n    </div>\n  )\n}\n\nexport default Dropzone;"]},"metadata":{},"sourceType":"module"}